version: '3.3'
services:
  elasticsearch:
    image: registry.cn-beijing.aliyuncs.com/twigcodes/elasticsearch-wo-xpack:5.5.0
    volumes:
    - esdata:/usr/share/elasticsearch/data
    - ./docker/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    environment:
    - discovery.type=single-node
    ports:
    - "9200:9200"
    - "9300:9300"
    networks:
    - docker-app
  redis:
    image: registry.cn-beijing.aliyuncs.com/twigcodes/redis:4-alpine
    command: [ "redis-server", "--protected-mode", "no" ]
    ports:
    - "6379:6379"
    volumes:
    - redis-data:/data
    networks:
    - docker-app
  mysql:
    image: mysql:5
    ports:
    - "3306:3306"
    volumes:
    - api_db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 'test_pass'
      MYSQL_USER: 'test'
      MYSQL_PASS: 'pass'
    networks:
    - docker-app
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
    - "5672:5672" # JMS 端口
    - "15672:15672" # 管理端口 default user:pass = guest:guest
    networks:
    - docker-app
  configserver:
    image: registry.cn-beijing.aliyuncs.com/twigcodes/twig-config
    ports:
    - 8888:8888
    depends_on:
    - rabbitmq
    - discovery
    networks:
    - docker-app
  discovery:
    image: registry.cn-beijing.aliyuncs.com/twigcodes/twig-discovery
    depends_on:
    - rabbitmq
    ports:
    - 8761:8761
    networks:
    - docker-app
  apicube:
    image: registry.cn-beijing.aliyuncs.com/twigcodes/api-cube
    ports:
    - 8099:8099
    depends_on:
    - mongo
    - redis
    - rabbitmq
    - discovery
    - configserver
    networks:
    - docker-app
  gateway:
    image: registry.cn-beijing.aliyuncs.com/twigcodes/twig-gateway
    ports:
    - 8090:8090
    depends_on:
    - apicube
    - rabbitmq
    - discovery
    - configserver
    networks:
    - docker-app
volumes:
  api_db: {}
  redis-data: {}
  esdata: {}
networks:
  docker-app:
    driver: bridge
