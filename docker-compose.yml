version: '3.3'
services:

  # redis:
  #   image: registry.cn-beijing.aliyuncs.com/twigcodes/redis:4-alpine
  #   command: [ "redis-server", "--protected-mode", "no" ]
  #   ports:
  #   - "6379:6379"
  #   volumes:
  #   - redis-data:/data
  #   networks:
  #   - docker-app
  # mysql:
  #   image: mysql:5
  #   ports:
  #   - "3306:3306"
  #   volumes:
  #   - api_db:/var/lib/mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: 'test_pass'
  #     MYSQL_USER: 'test'
  #     MYSQL_PASS: 'pass'
  #   networks:
  #   - docker-app
#  keycloak:
#    image: jboss/keycloak:4.4.0.Final
#    restart: on-failure
#    command:
#    - '-b'
#    - '0.0.0.0'
#    - '-Dkeycloak.migration.action=import'
#    - '-Dkeycloak.migration.provider=dir'
#    - '-Dkeycloak.migration.dir=/config/'
#    - '-Dkeycloak.migration.strategy=IGNORE_EXISTING'
#    volumes:
#    - ./config:/config/
#    environment:
#    - KEYCLOAK_USER=admin
#    - KEYCLOAK_PASSWORD=password
#    - DB_VENDOR=postgres
#    - DB_USER=admin
#    - DB_PASSWORD=password
#    - DB_ADDR=keycloak-db
#    - DB_PORT=5432
#    - DB_DATABASE=keycloakdb
#    ports:
#    - '8081:8080'
#    depends_on:
#    - keycloak-db
#    networks:
#    - docker-app
#
#  keycloak-db:
#    image: postgres:10
#    environment:
#      POSTGRES_USER: admin
#      POSTGRES_PASSWORD: password
#      POSTGRES_DB: keycloakdb
#    volumes:
#    - pgdata:/var/lib/postgresql/data
#    networks:
#    - docker-app
#  rabbitmq:
#    image: rabbitmq:3-management-alpine
#    ports:
#      - '5672:5672' # JMS 端口
#      - '15672:15672' # 管理端口 default user:pass = guest:guest
#    networks:
#      - docker-app

  discovery:
    image: twigcodes/twig-discovery
    ports:
      - 8761:8761
    environment:
      SERVER_PORT: 8761
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      UAA_SERVER: 192.168.50.117
      UAA_PORT: 8095
      OAUTH2_GRANT_TYPE: implicit
      OAUTH2_CLIENT_ID: discoveryClient
      OAUTH2_CLIENT_SECRET: discoverySecret
    depends_on:
      - rabbitmq
    networks:
      - docker-app
volumes:
  api_db: {}
  redis-data: {}
  esdata: {}
networks:
  docker-app:
    driver: bridge
